 Retained Bytes │ Retained % │ Dominator Tree
────────────────┼────────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
           1420 ┊     28.06% ┊ "function names" subsection
           1057 ┊     20.89% ┊ data[0]
            692 ┊     13.67% ┊ wee_alloc::alloc_with_refill::h5c9d402193a17c6f
            574 ┊     11.34% ┊   ⤷ wee_alloc::alloc_first_fit::he0386570d411f2dd
              9 ┊      0.18% ┊   ⤷ type[9]: (i32, i32, i32, i32, i32) -> i32
            501 ┊      9.90% ┊ <wee_alloc::WeeAlloc as core::alloc::GlobalAlloc>::dealloc::h69711e8132e6f382
            318 ┊      6.28% ┊   ⤷ wee_alloc::WeeAlloc::dealloc_impl::{{closure}}::hff20f0f104c45c9b
            323 ┊      6.38% ┊ table[0]
            319 ┊      6.30% ┊   ⤷ elem[0]
            143 ┊      2.83% ┊       ⤷ <wee_alloc::size_classes::SizeClassAllocPolicy as wee_alloc::AllocPolicy>::new_cell_for_free_list::h8a067d3ac413d7cb
            121 ┊      2.39% ┊       ⤷ <wee_alloc::LargeAllocPolicy as wee_alloc::AllocPolicy>::new_cell_for_free_list::h76947ebbcc6ea2bd
              7 ┊      0.14% ┊       ⤷ <wee_alloc::LargeAllocPolicy as wee_alloc::AllocPolicy>::min_cell_size::h46f760d9fc30d768
              6 ┊      0.12% ┊       ⤷ <wee_alloc::size_classes::SizeClassAllocPolicy as wee_alloc::AllocPolicy>::min_cell_size::h808536f25131690a
              6 ┊      0.12% ┊       ⤷ <wee_alloc::size_classes::SizeClassAllocPolicy as wee_alloc::AllocPolicy>::should_merge_adjacent_free_cells::h7b1f2a3bf020c7ad
              6 ┊      0.12% ┊       ⤷ <wee_alloc::LargeAllocPolicy as wee_alloc::AllocPolicy>::should_merge_adjacent_free_cells::hcc249a0c690184fb
              4 ┊      0.08% ┊       ⤷ type[1]: (i32) -> nil
              4 ┊      0.08% ┊       ⤷ core::ptr::real_drop_in_place::ha50c0d7cdfd5e643
              4 ┊      0.08% ┊       ⤷ core::ptr::real_drop_in_place::ha50c0d7cdfd5e643.621
              4 ┊      0.08% ┊       ⤷ core::ptr::real_drop_in_place::h35391338b43a3261
            309 ┊      6.11% ┊ export "greet"
            301 ┊      5.95% ┊   ⤷ greet
             93 ┊      1.84% ┊       ⤷ omnicu_xargo::ustr::UStr::push_str::hefe9e9a4b144d8a6
             35 ┊      0.69% ┊       ⤷ import wbg::__wbg_alert_07a8b1643f0fc0c4
             24 ┊      0.47% ┊       ⤷ __rust_dealloc
             12 ┊      0.24% ┊           ⤷ __rg_dealloc
              8 ┊      0.16% ┊       ⤷ core::slice::slice_index_len_fail::h90dd41b8d72969e8
              3 ┊      0.06% ┊           ⤷ type[0]: () -> nil
              5 ┊      0.10% ┊       ⤷ type[3]: (i32, i32) -> nil
            188 ┊      3.71% ┊ <wee_alloc::WeeAlloc as core::alloc::GlobalAlloc>::alloc::hc581bd987e59e6c9
            186 ┊      3.68% ┊ export "__wbindgen_realloc"
            165 ┊      3.26% ┊   ⤷ __wbindgen_realloc
            125 ┊      2.47% ┊       ⤷ __rust_realloc
            103 ┊      2.04% ┊           ⤷ __rg_realloc
             56 ┊      1.11% ┊               ⤷ memcpy
              8 ┊      0.16% ┊           ⤷ type[8]: (i32, i32, i32, i32) -> i32
              7 ┊      0.14% ┊       ⤷ type[6]: (i32, i32, i32) -> i32
             85 ┊      1.68% ┊ export "__wbindgen_malloc"
             65 ┊      1.28% ┊   ⤷ __wbindgen_malloc
             20 ┊      0.40% ┊       ⤷ __rust_alloc
             10 ┊      0.20% ┊           ⤷ __rg_alloc
             16 ┊      0.32% ┊ custom section 'producers' headers
             15 ┊      0.30% ┊ export "add"
              9 ┊      0.18% ┊   ⤷ add
             14 ┊      0.28% ┊ code section headers
             11 ┊      0.22% ┊ export "memory"
              2 ┊      0.04% ┊   ⤷ memory[0]
             11 ┊      0.22% ┊ custom section 'name' headers
              8 ┊      0.16% ┊ global[0]
              8 ┊      0.16% ┊ wasm magic bytes
              7 ┊      0.14% ┊ type[7]: (i32, i32, i32, i32) -> nil
              7 ┊      0.14% ┊ type section headers
              7 ┊      0.14% ┊ import section headers
              7 ┊      0.14% ┊ table section headers
              7 ┊      0.14% ┊ memory section headers
              7 ┊      0.14% ┊ global section headers
              7 ┊      0.14% ┊ export section headers
              7 ┊      0.14% ┊ element section headers
              7 ┊      0.14% ┊ data section headers
              6 ┊      0.12% ┊ type[4]: (i32, i32) -> i32
              6 ┊      0.12% ┊ type[5]: (i32, i32, i32) -> nil
              5 ┊      0.10% ┊ type[2]: (i32) -> i32
            137 ┊      2.71% ┊ [2 Unreachable Items]
