 Retained Bytes │ Retained % │ Dominator Tree
────────────────┼────────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
           1489 ┊     28.48% ┊ "function names" subsection
           1061 ┊     20.29% ┊ data[0]
            692 ┊     13.24% ┊ wee_alloc::alloc_with_refill::h5c9d402193a17c6f
            574 ┊     10.98% ┊   ⤷ wee_alloc::alloc_first_fit::he0386570d411f2dd
              9 ┊      0.17% ┊   ⤷ type[8]: (i32, i32, i32, i32, i32) -> i32
            501 ┊      9.58% ┊ <wee_alloc::WeeAlloc as core::alloc::GlobalAlloc>::dealloc::h69711e8132e6f382
            318 ┊      6.08% ┊   ⤷ wee_alloc::WeeAlloc::dealloc_impl::{{closure}}::hff20f0f104c45c9b
            481 ┊      9.20% ┊ export "greet"
            473 ┊      9.05% ┊   ⤷ greet
            297 ┊      5.68% ┊       ⤷ alloc::vec::Vec<T>::extend_from_slice::h1ab3d3d931b75739
            125 ┊      2.39% ┊           ⤷ alloc::alloc::handle_alloc_error::h0cc978e7966f5f5f
            116 ┊      2.22% ┊               ⤷ rust_oom
             88 ┊      1.68% ┊                   ⤷ data[1]
             35 ┊      0.67% ┊       ⤷ import wbg::__wbg_alert_07a8b1643f0fc0c4
             24 ┊      0.46% ┊       ⤷ __rust_dealloc
             12 ┊      0.23% ┊           ⤷ __rg_dealloc
            324 ┊      6.20% ┊ table[0]
            320 ┊      6.12% ┊   ⤷ elem[0]
            143 ┊      2.74% ┊       ⤷ <wee_alloc::size_classes::SizeClassAllocPolicy as wee_alloc::AllocPolicy>::new_cell_for_free_list::h8a067d3ac413d7cb
            121 ┊      2.31% ┊       ⤷ <wee_alloc::LargeAllocPolicy as wee_alloc::AllocPolicy>::new_cell_for_free_list::h76947ebbcc6ea2bd
              7 ┊      0.13% ┊       ⤷ <wee_alloc::LargeAllocPolicy as wee_alloc::AllocPolicy>::min_cell_size::h46f760d9fc30d768
              6 ┊      0.11% ┊       ⤷ <wee_alloc::size_classes::SizeClassAllocPolicy as wee_alloc::AllocPolicy>::min_cell_size::h808536f25131690a
              6 ┊      0.11% ┊       ⤷ <wee_alloc::size_classes::SizeClassAllocPolicy as wee_alloc::AllocPolicy>::should_merge_adjacent_free_cells::h7b1f2a3bf020c7ad
              6 ┊      0.11% ┊       ⤷ <wee_alloc::LargeAllocPolicy as wee_alloc::AllocPolicy>::should_merge_adjacent_free_cells::hcc249a0c690184fb
              4 ┊      0.08% ┊       ⤷ std::alloc::default_alloc_error_hook::hbcec6c9c827ba0ad
              4 ┊      0.08% ┊       ⤷ core::ptr::real_drop_in_place::ha50c0d7cdfd5e643
              4 ┊      0.08% ┊       ⤷ core::ptr::real_drop_in_place::ha50c0d7cdfd5e643.621
              4 ┊      0.08% ┊       ⤷ core::ptr::real_drop_in_place::h35391338b43a3261
            188 ┊      3.60% ┊ <wee_alloc::WeeAlloc as core::alloc::GlobalAlloc>::alloc::hc581bd987e59e6c9
             69 ┊      1.32% ┊ __rust_realloc
             47 ┊      0.90% ┊   ⤷ __rg_realloc
              8 ┊      0.15% ┊   ⤷ type[7]: (i32, i32, i32, i32) -> i32
             65 ┊      1.24% ┊ export "__wbindgen_malloc"
             45 ┊      0.86% ┊   ⤷ __wbindgen_malloc
             56 ┊      1.07% ┊ memcpy
             54 ┊      1.03% ┊ export "__wbindgen_realloc"
             33 ┊      0.63% ┊   ⤷ __wbindgen_realloc
             20 ┊      0.38% ┊ __rust_alloc
             10 ┊      0.19% ┊   ⤷ __rg_alloc
             16 ┊      0.31% ┊ custom section 'producers' headers
             15 ┊      0.29% ┊ export "add"
              9 ┊      0.17% ┊   ⤷ add
             14 ┊      0.27% ┊ code section headers
             11 ┊      0.21% ┊ export "memory"
              2 ┊      0.04% ┊   ⤷ memory[0]
             11 ┊      0.21% ┊ custom section 'name' headers
              8 ┊      0.15% ┊ global[0]
              8 ┊      0.15% ┊ wasm magic bytes
              7 ┊      0.13% ┊ type[5]: (i32, i32, i32) -> i32
              7 ┊      0.13% ┊ type[6]: (i32, i32, i32, i32) -> nil
              7 ┊      0.13% ┊ type section headers
              7 ┊      0.13% ┊ import section headers
              7 ┊      0.13% ┊ table section headers
              7 ┊      0.13% ┊ memory section headers
              7 ┊      0.13% ┊ global section headers
              7 ┊      0.13% ┊ export section headers
              7 ┊      0.13% ┊ element section headers
              7 ┊      0.13% ┊ data section headers
              6 ┊      0.11% ┊ type[3]: (i32, i32) -> i32
              6 ┊      0.11% ┊ type[4]: (i32, i32, i32) -> nil
              5 ┊      0.10% ┊ type[1]: (i32) -> i32
              5 ┊      0.10% ┊ type[2]: (i32, i32) -> nil
              4 ┊      0.08% ┊ type[0]: (i32) -> nil
             49 ┊      0.94% ┊ [1 Unreachable Items]
