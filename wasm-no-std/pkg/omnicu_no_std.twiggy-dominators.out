 Retained Bytes │ Retained % │ Dominator Tree
────────────────┼────────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
           1447 ┊     37.94% ┊ "function names" subsection
           1049 ┊     27.50% ┊ export "alert_message_display"
           1025 ┊     26.87% ┊   ⤷ alert_message_display
            574 ┊     15.05% ┊       ⤷ __rust_dealloc
            560 ┊     14.68% ┊           ⤷ __rg_dealloc
            546 ┊     14.32% ┊               ⤷ <wee_alloc::WeeAlloc as core::alloc::global::GlobalAlloc>::dealloc::h64fe22c186edb5ed
            341 ┊      8.94% ┊                   ⤷ wee_alloc::WeeAlloc::dealloc_impl::{{closure}}::h3cc23353811063a6
            245 ┊      6.42% ┊       ⤷ __rust_alloc
            231 ┊      6.06% ┊           ⤷ __rg_alloc
            217 ┊      5.69% ┊               ⤷ <wee_alloc::WeeAlloc as core::alloc::global::GlobalAlloc>::alloc::h863bda3e0be4e728
             95 ┊      2.49% ┊       ⤷ data[0]
             12 ┊      0.31% ┊       ⤷ import env::alert
              6 ┊      0.16% ┊       ⤷ rust_oom
              5 ┊      0.13% ┊       ⤷ type[3]: (i32, i32) -> nil
              3 ┊      0.08% ┊       ⤷ type[4]: () -> nil
            751 ┊     19.69% ┊ wee_alloc::alloc_with_refill::h3579cbb8bfe78a19
            608 ┊     15.94% ┊   ⤷ wee_alloc::alloc_first_fit::h09249362ac90a6bf
              9 ┊      0.24% ┊   ⤷ type[5]: (i32, i32, i32, i32, i32) -> i32
            344 ┊      9.02% ┊ table[0]
            340 ┊      8.91% ┊   ⤷ elem[0]
            168 ┊      4.40% ┊       ⤷ <wee_alloc::size_classes::SizeClassAllocPolicy as wee_alloc::AllocPolicy>::new_cell_for_free_list::h67b87ca4062c243a
            112 ┊      2.94% ┊       ⤷ <wee_alloc::LargeAllocPolicy as wee_alloc::AllocPolicy>::new_cell_for_free_list::hc042b136d57cfd86
              7 ┊      0.18% ┊       ⤷ <wee_alloc::LargeAllocPolicy as wee_alloc::AllocPolicy>::min_cell_size::h6dca2a1fac9bf2aa
              6 ┊      0.16% ┊       ⤷ <wee_alloc::size_classes::SizeClassAllocPolicy as wee_alloc::AllocPolicy>::min_cell_size::h2abbdc00ad0ab0d0
              6 ┊      0.16% ┊       ⤷ <wee_alloc::size_classes::SizeClassAllocPolicy as wee_alloc::AllocPolicy>::should_merge_adjacent_free_cells::hb6992b70eba153bc
              6 ┊      0.16% ┊       ⤷ <wee_alloc::LargeAllocPolicy as wee_alloc::AllocPolicy>::should_merge_adjacent_free_cells::ha0801389bf773b94
              5 ┊      0.13% ┊       ⤷ type[2]: (i32) -> i32
              4 ┊      0.10% ┊       ⤷ type[6]: (i32) -> nil
              4 ┊      0.10% ┊       ⤷ core::ptr::drop_in_place::hce83941a0249a07e
              4 ┊      0.10% ┊       ⤷ core::ptr::drop_in_place::hce83941a0249a07e.152
              4 ┊      0.10% ┊       ⤷ core::ptr::drop_in_place::hb377abe8a932bf94.153
             21 ┊      0.55% ┊ export "__heap_base"
              7 ┊      0.18% ┊   ⤷ global[2]
             20 ┊      0.52% ┊ export "__data_end"
              7 ┊      0.18% ┊   ⤷ global[1]
             17 ┊      0.45% ┊ custom section '.debug_aranges' headers
             12 ┊      0.31% ┊ custom section 'producers' headers
             11 ┊      0.29% ┊ export "memory"
              2 ┊      0.05% ┊   ⤷ memory[0]
              8 ┊      0.21% ┊ custom section 'name' headers
              8 ┊      0.21% ┊ wasm magic bytes
              7 ┊      0.18% ┊ type[0]: (i32, i32, i32, i32) -> nil
              7 ┊      0.18% ┊ global[0]
              7 ┊      0.18% ┊ code section headers
              6 ┊      0.16% ┊ type[1]: (i32, i32) -> i32
              3 ┊      0.08% ┊ type section headers
              3 ┊      0.08% ┊ import section headers
              3 ┊      0.08% ┊ table section headers
              3 ┊      0.08% ┊ memory section headers
              3 ┊      0.08% ┊ global section headers
              3 ┊      0.08% ┊ export section headers
              3 ┊      0.08% ┊ element section headers
              3 ┊      0.08% ┊ data section headers
             75 ┊      1.97% ┊ [2 Unreachable Items]
